{"version":3,"sources":["../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","view/LoginView/LoginView.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getFormControlLabelUtilityClasses","slot","generateUtilityClass","formControlLabelClasses","generateUtilityClasses","_excluded","FormControlLabelRoot","styled","name","overridesResolver","props","styles","ownerState","label","root","capitalize","labelPlacement","theme","_extends","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","disabled","flexDirection","color","palette","text","FormControlLabel","React","inProps","ref","useThemeProps","className","componentsProps","control","disabledProp","disableTypography","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","classes","slots","composeClasses","useUtilityClasses","_jsxs","clsx","children","type","Typography","_jsx","component","typography","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","skipSx","padding","borderRadius","edge","size","SwitchBaseInput","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disableFocusRipple","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","useControlled","controlled","Boolean","state","setCheckedState","hasLabelFor","input","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize","createTheme","LoginView","dispatch","useDispatch","useState","email","setName","password","setNumber","handelChange","e","currentTarget","ThemeProvider","Container","maxWidth","sx","bgcolor","Box","marginTop","Avatar","m","variant","onSubmit","preventDefault","authOperations","logIn","noValidate","mt","TextField","fullWidth","autoComplete","Button","mb"],"mappings":"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","file":"static/js/5.1b9deae8.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","import { generateUtilityClasses, generateUtilityClass } from '@mui/core';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label.type === Typography || disableTypography ? label : /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setName] = useState(\"\");\n  const [password, setNumber] = useState(\"\");\n\n  const handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"email\":\n        setName(value);\n        break;\n      case \"password\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setNumber(\"\");\n    setName(\"\");\n  };\n\n\n\n  return (\n    <ThemeProvider theme={theme} >\n      <Container component=\"main\" maxWidth=\"xs\" sx={{bgcolor: 'success.light' }}>\n             <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n           \n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'success.dark' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={handelChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={handelChange}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"success\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"success\" \n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            \n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}